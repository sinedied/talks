{
	// Place your openscad workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "middle fix": {
    "scope": "scad",
    "prefix": "mf",
    "body": [
      "if (w > 1 || d > 1)",
      "{",
      "  single = w == 1 || d == 1;",
      "  df = single ? 0.55 : 1;",
      "",
      "  for (i = [0 : max(w - 2, 0)])",
      "    for (j = [0 : max(d - 2, 0)])",
      "      translate([",
      "        i + (w == 1 ? 0.5 : 1),",
      "        j + (d == 1 ? 0.5 : 1),",
      "        fudge",
      "      ])",
      "        difference()",
      "        {",
      "          cylinder(d = 0.915 * df, h_hole/2, $$fn = 32);",
      "          cylinder(d = 0.5 * df * df, h_hole, $$fn = 32, center = true);",
      "        }",
      "}"
    ],
  },
  "middle fix w/ tolerance": {
    "scope": "scad",
    "prefix": "mft",
    "body": [
      "if (w > 1 || d > 1)",
      "{",
      "  single = w == 1 || d == 1;",
      "  df = single ? 0.55 : 1;",
      "",
      "  for (i = [0 : max(w - 2, 0)])",
      "    for (j = [0 : max(d - 2, 0)])",
      "      translate([",
      "        i + (w == 1 ? 0.5 : 1),",
      "        j + (d == 1 ? 0.5 : 1),",
      "        fudge",
      "      ])",
      "        difference()",
      "        {",
      "          cylinder(d = (0.915 - tolerance*2) * df, h_hole/2, $$fn = 32);",
      "          cylinder(d = (0.5 + tolerance*2) * df * df, h_hole, $$fn = 32, center = true);",
      "        }",
      "}"
    ],
  }
}
